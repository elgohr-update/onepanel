syntax = "proto3";

package api;
option go_package = "github.com/onepanelio/core/api/gen";

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";

service ModelService {
  rpc DeployModel (DeployModelRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      post: "/apis/v1beta1/{namespace}/models"
      body: "*"
    };
  }

  rpc GetModelStatus (ModelIdentifier) returns (ModelStatus) {
    option (google.api.http) = {
      get: "/apis/v1beta1/{namespace}/models/{name}"
    };
  }

  rpc DeleteModel (ModelIdentifier) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      delete: "/apis/v1beta1/{namespace}/models/{name}"
    };
  }
}

message ModelIdentifier {
  string namespace = 1;
  string name = 2;
}

message NodeSelector {
  string key = 1;
  string value = 2;
}

message ResourceLimits {
  string cpu = 1;
  string memory = 2;
}

message PredictorServer {
  string name = 1;
  string runtimeVersion = 2;
  string storageUri = 3;
  ResourceLimits limits = 4;
}

message Env {
    string name = 1;
    string value = 2;
}

message Container {
    string image = 1;
    string name = 2;
    repeated Env env = 3;
}

message Transformer {
    repeated Container containers = 1;
}

message Predictor {
  NodeSelector nodeSelector = 1;
  PredictorServer server = 2;
}

message DeployModelRequest {
  string namespace = 1;
  string name = 2;

  Predictor predictor = 3;
  Transformer transformer = 4;
}

message DeployModelResponse {
  string status = 1;
}

message ModelCondition {
  string lastTransitionTime = 1;
  string status = 2;
  string type = 3;
}

message ModelStatus {
    bool ready = 1;
    repeated ModelCondition conditions = 2;
}